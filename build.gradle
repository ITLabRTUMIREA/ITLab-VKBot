buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'idea'

group 'ru.rtuitlab'
version '0.0.1'
//mainClassName = "io.ktor.server.netty.EngineMain"

mainClassName = "MainKt"

jar {
    manifest {
        attributes 'Implementation-Title': 'Vk bot build',
                'Implementation-Version': version,
                'Main-Class': 'io.ktor.server.netty.EngineMain'
    }
    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['resources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

idea.module.resourceDirs += file('src')

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation("ch.qos.logback:logback-classic:$logback_version")
    implementation("org.jsoup:jsoup:$jsoup_version")

    implementation("org.hibernate:hibernate-core:$hibernate_version")
    implementation("org.hibernate:hibernate-entitymanager:$hibernate_version")

    implementation("org.postgresql:postgresql:$postgresql_version")
    implementation("javax.mail:mail:$mail_version")

    implementation("com.github.kittinunf.fuel:fuel:$fuel_version")
    implementation("com.github.kittinunf.fuel:fuel-gson:$fuel_version")

    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-gson:$ktor_version"

    implementation("com.vk.api:sdk:$vk_api_version") {
        exclude group: 'io.netty', module: 'netty-codec-http2'
        exclude group: 'io.netty', module: 'netty-transport-native-kqueue'
        exclude group: 'io.netty', module: 'netty-transport-native-epoll'
        exclude group: 'org.asynchttpclient', module: 'async-http-client'
    }

    implementation("com.konghq:unirest-java:$unirestjava_version")

    testCompile "io.ktor:ktor-server-tests:$ktor_version"
}